*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  /* font-size: 10px; */
  /* take 10/16- so that when user changes % of screen the font size changes */
  /* default is 16px but we want to start at 10px */
  font-size: 62.5%;
}

body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  font-size: 1.6rem;
  line-height: 1.7;
  color: #777;
  padding: 3rem;

  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 133, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;

  /* top left, top right, bottom right, bottom left */
  clip-path: polygon(0 0, 100% 0%, 100% 75vh, 0% 100%);
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  /* transforms the element to be shifted to the middle x and y*/
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  /* gets rid of the shakyness of movement */
  backface-visibility: hidden;
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;

  animation-name: moveInLeft;
  animation-duration: 1s;

  /* starts faster and because slower at the end for ease-out */
  animation-timing-function: ease-out;
  /* animation-iteration-count: 3; */
  /* animation-delay: 3s; */
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;

  animation-name: moveInRight;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}

@keyframes moveInLeft {
  /* start */
  0% {
    /* make invisible in beginning */
    opacity: 0;
    transform: translateX(-10rem);
  }
  /* could do the middle also with 50%, 80%, etc */
  80% {
    transform: translateX(1rem);
  }
  /* finish */
  100% {
    opacity: 1;
    /* translate 0 makes it look like it is right now */
    transform: translate(0);
  }
}

@keyframes moveInRight {
  /* start */
  0% {
    /* make invisible in beginning */
    opacity: 0;
    transform: translateX(10rem);
  }
  /* could do the middle also with 50%, 80%, etc */
  80% {
    transform: translateX(-1rem);
  }
  /* finish */
  100% {
    opacity: 1;
    /* translate 0 makes it look like it is right now */
    transform: translate(0);
  }
}

@keyframes moveInButton {
  /* start */
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* sudo class- : */
/* use to style based off a specific condition */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  /* padding 2 numbers- top bottom, left and right */
  /* padding 4 numbers- top, bottom, left, right */
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  /* saying translate at actions and then in states say amount */
  transition: all 0.2s;
  position: relative;
}

/* sudo state that selects the state of the element */
/* :hover */
.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

/* active is when clicked */
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

/* this goes behind the button */
.btn::after {
  content: '';
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

.btn--white::after {
  background-color: #fff;
}

.btn:hover::after {
  /* increasing the size of the original button */
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn--animated {
  animation: moveInButton 0.5s ease-out 0.75s;
  animation-fill-mode: backwards;
}
